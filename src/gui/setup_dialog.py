"""
Dialog thi·∫øt l·∫≠p ban ƒë·∫ßu cho FocusGuard
T·∫°o m·∫≠t kh·∫©u l·∫ßn ƒë·∫ßu ti√™n
"""

from PyQt5.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QLabel, 
                            QLineEdit, QPushButton, QMessageBox, QCheckBox)
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QPixmap, QFont
from pathlib import Path
import sys
import os

# Th√™m th∆∞ m·ª•c src v√†o path
current_dir = Path(__file__).parent.parent.parent
sys.path.insert(0, str(current_dir))

from src.core.password_manager import PasswordManager

class SetupDialog(QDialog):
    """Dialog thi·∫øt l·∫≠p l·∫ßn ƒë·∫ßu"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.password_manager = PasswordManager()
        self.setup_ui()
        
    def setup_ui(self):
        """Thi·∫øt l·∫≠p giao di·ªán"""
        self.setWindowTitle("FocusGuard - Thi·∫øt l·∫≠p ban ƒë·∫ßu")
        self.setFixedSize(450, 400)  # TƒÉng k√≠ch th∆∞·ªõc dialog
        self.setModal(True)
        
        # Layout ch√≠nh
        layout = QVBoxLayout()
        layout.setSpacing(15)  # Gi·∫£m spacing
        layout.setContentsMargins(20, 20, 20, 20)
        
        # Ti√™u ƒë·ªÅ
        title_label = QLabel("üîí Ch√†o m·ª´ng ƒë·∫øn v·ªõi FocusGuard!")
        title_font = QFont()
        title_font.setPointSize(16)
        title_font.setBold(True)
        title_label.setFont(title_font)
        title_label.setAlignment(Qt.AlignCenter)
        layout.addWidget(title_label)
        
        # M√¥ t·∫£
        desc_label = QLabel(
            "ƒê·ªÉ b·∫£o v·ªá ·ª©ng d·ª•ng, b·∫°n c·∫ßn t·∫°o m·ªôt m·∫≠t kh·∫©u.\n"
            "M·∫≠t kh·∫©u n√†y s·∫Ω ƒë∆∞·ª£c y√™u c·∫ßu khi:\n"
            "‚Ä¢ D·ª´ng phi√™n t·∫≠p trung s·ªõm\n"
            "‚Ä¢ Tho√°t ·ª©ng d·ª•ng trong khi ƒëang t·∫≠p trung\n"
            "‚Ä¢ Thay ƒë·ªïi c√†i ƒë·∫∑t quan tr·ªçng"
        )
        desc_label.setWordWrap(True)
        desc_label.setAlignment(Qt.AlignCenter)
        layout.addWidget(desc_label)
        
        # Form nh·∫≠p m·∫≠t kh·∫©u
        form_layout = QVBoxLayout()
        
        # M·∫≠t kh·∫©u
        self.password_label = QLabel("M·∫≠t kh·∫©u:")
        form_layout.addWidget(self.password_label)
        
        self.password_input = QLineEdit()
        self.password_input.setEchoMode(QLineEdit.Password)
        self.password_input.setPlaceholderText("Nh·∫≠p m·∫≠t kh·∫©u (t·ªëi thi·ªÉu 6 k√Ω t·ª±)")
        form_layout.addWidget(self.password_input)
        
        # Removed password confirmation field - user only needs to type password once
        
        layout.addLayout(form_layout)
        
        # Checkbox hi·ªÉn th·ªã m·∫≠t kh·∫©u
        self.show_password_cb = QCheckBox("Hi·ªÉn th·ªã m·∫≠t kh·∫©u")
        self.show_password_cb.toggled.connect(self.toggle_password_visibility)
        layout.addWidget(self.show_password_cb)
        
        # N√∫t b·∫•m
        button_layout = QHBoxLayout()
        
        self.cancel_btn = QPushButton("H·ªßy")
        self.cancel_btn.clicked.connect(self.reject)
        button_layout.addWidget(self.cancel_btn)
        
        self.create_btn = QPushButton("T·∫°o m·∫≠t kh·∫©u")
        self.create_btn.clicked.connect(self.create_password)
        self.create_btn.setDefault(True)
        button_layout.addWidget(self.create_btn)
        
        layout.addLayout(button_layout)
        
        self.setLayout(layout)
        
        # Focus v√†o √¥ nh·∫≠p m·∫≠t kh·∫©u
        self.password_input.setFocus()
        
        # K·∫øt n·ªëi Enter key
        self.password_input.returnPressed.connect(self.create_password)
    
    def toggle_password_visibility(self, checked):
        """B·∫≠t/t·∫Øt hi·ªÉn th·ªã m·∫≠t kh·∫©u"""
        if checked:
            self.password_input.setEchoMode(QLineEdit.Normal)
        else:
            self.password_input.setEchoMode(QLineEdit.Password)
    
    def create_password(self):
        """T·∫°o m·∫≠t kh·∫©u m·ªõi"""
        password = self.password_input.text()
        
        # Ki·ªÉm tra ƒë·ªô d√†i
        if len(password) < 6:
            QMessageBox.warning(
                self,
                "L·ªói",
                "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±!"
            )
            self.password_input.setFocus()
            return
        
        # T·∫°o m·∫≠t kh·∫©u
        if self.password_manager.set_password(password):
            QMessageBox.information(
                self,
                "Th√†nh c√¥ng",
                "M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!\n"
                "H√£y ghi nh·ªõ m·∫≠t kh·∫©u n√†y ƒë·ªÉ s·ª≠ d·ª•ng ·ª©ng d·ª•ng."
            )
            self.accept()
        else:
            QMessageBox.critical(
                self,
                "L·ªói",
                "Kh√¥ng th·ªÉ t·∫°o m·∫≠t kh·∫©u. Vui l√≤ng th·ª≠ l·∫°i!"
            )
    
    def keyPressEvent(self, event):
        """X·ª≠ l√Ω ph√≠m b·∫•m"""
        if event.key() == Qt.Key_Escape:
            self.reject()
        else:
            super().keyPressEvent(event)
